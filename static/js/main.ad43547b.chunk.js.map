{"version":3,"sources":["Loader/Loader.js","Table/Table.js","Filter/Filter.js","FilteredData/FilteredData.js","App.js","serviceWorker.js","index.js"],"names":["className","props","onClick","onSort","bind","sortField","sort","data","map","item","singer","song","ganre","year","Filter","handleChangeGanre","event","setState","selectedGanre","target","value","wrapperFunction","setSelectedYear","state","selectedYear","arr","comp","e","i","final","indexOf","filter","this","uniqueYear","getUnique","uniqueCouse","onChange","setSelectedGanre","course","key","id","React","Component","filteredYears","result","filteredGanres","filteredSongs","Fragment","App","isLoading","currentPage","rowsToDisplay","clonedData","concat","sortType","orderedData","_","orderBy","pageChangeHandler","selected","changeDisplayedItems","count","pageRangeDisplayed","fetch","response","json","displayData","chunk","pageCount","Math","ceil","length","Table","itemsCountPerPage","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","onPageChange","containerClassName","activeClassName","forcePage","FilteredData","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ad43547b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Loader.css';\r\n\r\n\r\nexport default ()=> <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>","import React from 'react';\r\n\r\nexport default props => (\r\n    <table className=\"table\">\r\n        <thead>\r\n            <tr>\r\n<th onClick={props.onSort.bind(null, 'singer')}>Singer {props.sortField === 'singer' ? <small>{props.sort}</small>: null }</th>\r\n                <th onClick={props.onSort.bind(null, 'song')}>Song {props.sortField === 'song' ? <small>{props.sort}</small>: null }</th>\r\n                <th onClick={props.onSort.bind(null, 'ganre')}>Ganre {props.sortField === 'ganre' ? <small>{props.sort}</small>: null }</th>\r\n                <th onClick={props.onSort.bind(null, 'year')}>Year {props.sortField === 'year' ? <small>{props.sort}</small>: null }</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {props.data.map(item =>(\r\n                <tr>\r\n                    <td>{item.singer}</td>\r\n                    <td>{item.song}</td>\r\n                    <td>{item.ganre}</td>\r\n                    <td>{item.year}</td>\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n    </table>\r\n)","import React from 'react';\r\n\r\nexport default class Filter extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          value: \"\",\r\n          data: this.props.data,\r\n          selectedGanre: \"all\",\r\n          selectedYear: \"all\"\r\n\r\n          \r\n        };\r\n      }\r\n\r\n\r\n  handleChangeGanre = event => {\r\n    this.setState({ selectedGanre: event.target.value });\r\n  };\r\n\r\n  wrapperFunction = (event) => {\r\n    this.props.setSelectedYear(this.state.selectedYear)\r\n    this.setState({ selectedYear: event.target.value });\r\n    \r\n  }\r\n\r\n  getUnique(arr, comp) {\r\n    const unique = arr\r\n      .map(e => e[comp])\r\n\r\n      .map((e, i, final) => final.indexOf(e) === i && i)\r\n\r\n      .filter(e => arr[e])\r\n\r\n      .map(e => arr[e]);\r\n    \r\n    return unique;\r\n  }\r\n\r\n    render(){\r\n\r\n    const data = this.state.data;\r\n    \r\n\r\n    const uniqueYear = this.getUnique(data, \"year\");\r\n    const uniqueCouse = this.getUnique(data, \"ganre\");\r\n    \r\n\r\n        return (<div className=\"filter\">\r\n                <select className=\"select\"\r\n                  value={this.props.ganre}\r\n                  onChange={event=>this.props.setSelectedGanre(event.target.value)}\r\n                >\r\n                  <option value=\"all\">All</option>\r\n                  {uniqueCouse.map(course => (\r\n                    <option key={course.id} value={course.ganre}>\r\n                        \r\n                      {course.ganre}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n\r\n              <select\r\n              className=\"select\"\r\n                  value={this.props.year}\r\n                    onChange={event=>this.props.setSelectedYear(event.target.value)}\r\n                    // onChange={this.setYear}\r\n                >\r\n                  <option value=\"all\">All</option>\r\n                  {uniqueYear.map(course => (\r\n                    <option key={course.id} value={course.year}>\r\n                        \r\n                      {course.year}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}","import React from 'react';\r\n\r\nexport default props => {\r\n\r\n    const filteredYears = props.data.filter(function(result) {\r\n        return result.year === props.year;\r\n      });\r\n    \r\n    const filteredGanres = props.data.filter(function(result) {\r\n      return result.ganre === props.ganre;\r\n    });\r\n\r\n    const filteredSongs = filteredGanres.filter(function(result) {\r\n      return result.year === props.year;\r\n    });\r\n\r\n    return <div>\r\n\r\n        {props.year !== 'all' && props.ganre !== 'all'\r\n        ? <table>\r\n        <thead>\r\n            <tr>\r\n              <th>Singer</th>\r\n              <th>Song</th>\r\n              <th>Ganre</th>\r\n              <th>Year</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>{filteredSongs.map(item => (\r\n                              \r\n          <tr key={item.id}>\r\n            <td>{item.singer}</td>\r\n            <td>{item.song}</td>\r\n            <td>{item.ganre}</td>\r\n            <td>{item.year}</td>\r\n            </tr>                 \r\n        ))}  </tbody>\r\n        </table> :\r\n        <React.Fragment>\r\n          \r\n        <table>\r\n        <thead>\r\n            <tr>\r\n              <th>Singer</th>\r\n              <th>Song</th>\r\n              <th>Ganre</th>\r\n              <th>Year</th>\r\n            </tr>\r\n        </thead>\r\n            <tbody>\r\n                {filteredGanres.map(item => (\r\n                              \r\n                  <tr key={item.id}>\r\n                    <td>{item.singer}</td>\r\n                    <td>{item.song}</td>\r\n                    <td>{item.ganre}</td>\r\n                    <td>{item.year}</td>\r\n                    </tr>                 \r\n                  \r\n                ))}\r\n            </tbody>\r\n        </table>\r\n        <table>\r\n            <tbody>\r\n                {filteredYears.map(item => (\r\n                              \r\n                  <tr key={item.id}>\r\n                    <td>{item.singer}</td>\r\n                    <td>{item.song}</td>\r\n                    <td>{item.ganre}</td>\r\n                    <td>{item.year}</td>\r\n                    </tr>                 \r\n                  \r\n                ))}\r\n            </tbody>\r\n        </table>\r\n        </React.Fragment>}\r\n        \r\n    </div>\r\n}","import React, { Component } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport \"./App.css\";\nimport Loader from \"./Loader/Loader\";\nimport Table from \"./Table/Table\";\nimport _ from \"lodash\";\nimport Filter from './Filter/Filter';\nimport FilteredData from './FilteredData/FilteredData';\n\nclass App extends Component {\n  state = {\n    isLoading: true,\n    data: [],\n    sort: \" asc\",\n    sortField: \"singer\",\n    currentPage: 0,\n    rowsToDisplay: 3,\n    selectedGanre: \"all\",\n    selectedYear: \"all\"\n  };\n\n\n\n  async componentDidMount() {\n    const response = await fetch(\"./songs.json\");\n    const data = await response.json();\n\n    this.setState({\n      isLoading: false,\n      data: _.orderBy(data, this.state.sortField, this.state.sort)\n    });\n  }\n\n  onSort = sortField => {\n    const clonedData = this.state.data.concat();\n    const sortType = this.state.sort === \"asc\" ? \"desc\" : 'asc';\n\n    const orderedData = _.orderBy(clonedData, sortField, sortType);\n\n    this.setState({\n      data: orderedData,\n      sort: sortType,\n      sortField\n    });\n  };\n\n  pageChangeHandler = ({ selected }) => {\n    this.setState({\n      currentPage: selected\n    });\n  };\n\n  changeDisplayedItems = count => {\n    this.setState({\n      pageRangeDisplayed: count\n    });\n  };\n\n  setSelectedGanre = ganre => {\n    this.setState({selectedGanre: ganre});\n    // console.log(this.state.selectedGanre)\n  }\n\n  setSelectedYear = year => {\n    this.setState({selectedYear: year});\n  }\n\n  render() {\n    const displayData = _.chunk(this.state.data, this.state.rowsToDisplay)[\n      this.state.currentPage\n    ];\n\n    const pageCount = Math.ceil(\n      this.state.data.length / this.state.rowsToDisplay\n    );\n\n    \n    \n\n    return (\n      <div className=\"App\">\n        \n        {this.state.isLoading ? (\n          <Loader />\n        ) : <div className=\"content-wrap\">\n          {this.state.selectedYear==='all'&& this.state.selectedGanre==='all'\n              ? <React.Fragment> \n              <Table\n                onSort={this.onSort}\n                data={displayData}\n                sort={this.state.sort}\n                sortField={this.state.sortField}\n              />     \n                \n              {this.state.data.length > 3 ? (\n                <React.Fragment> \n                  <ReactPaginate\n                    itemsCountPerPage={\"3\"}\n                    previousLabel={\"<\"}\n                    nextLabel={\">\"}\n                    breakLabel={\"...\"}\n                    breakClassName={\"break-me\"}\n                    pageCount={pageCount}\n                    marginPagesDisplayed={4}\n                    pageRangeDisplayed={6}\n                    onPageChange={this.pageChangeHandler}\n                    containerClassName={\"pagination\"}\n                    activeClassName={\"active\"}\n                    forcePage={this.state.currentPage}\n                  />\n                  <div className=\"bottom-wrap\">\n                  <div className=\"page-size\">\n                    Songs to show:\n                    <span onClick={() => this.setState({ rowsToDisplay: 3 })}>3</span>\n                    <span onClick={() => this.setState({ rowsToDisplay: 5 })}>5</span>\n                    <span onClick={() => this.setState({ rowsToDisplay: 10 })}>\n                      10\n                    </span>\n                  </div>\n                  <Filter data={this.state.data} setSelectedGanre={this.setSelectedGanre} setSelectedYear={this.setSelectedYear} year={this.state.selectedYear} ganre={this.state.selectedGanre}/>\n                  </div>\n                  </React.Fragment> )\n                  : null}   \n                  \n                </React.Fragment>\n                \n                             \n            : <React.Fragment>\n            <FilteredData data={this.state.data} year={this.state.selectedYear} ganre={this.state.selectedGanre}/>\n            <Filter data={this.state.data} setSelectedGanre={this.setSelectedGanre} setSelectedYear={this.setSelectedYear} year={this.state.selectedYear} ganre={this.state.selectedGanre}/>\n            </React.Fragment>\n        } </div>}\n       \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}